from scapy.all import *
import sys
import ipaddress

conf.verb = 0
synPingPorts = [22, 80, 443, 445]
ackPingPorts = [22, 80, 443, 445]

class ScanIP:
    def __init__(self, ip):
        self.ip = str(ip)
        self.state = 0
        self.port_found = 0

    def scan(self):
        if(self.echo() == 1):
            self.found = "Echo Ping: "
            self.state = 1
            return
        if(self.timestamp() == 1):
            self.found = "Timestamp Ping: "
            self.state = 1
            return
        if(self.addrmask() == 1):
            self.found = "Addrmask Ping: "
            self.state = 1
            return
        if(self.syn() == 1):
            self.found = "Syn Ping: " + str(self.port_found)
            self.state = 1
            return
        if(self.ack() == 1):
            self.found = "Ack Ping: " + str(self.port_found)
            self.state = 1
            return

    def doPingScan(self, packet):
        reply = sr1(packet, timeout=1)
        if (reply is None):
            return 0
        return 1

    def echo(self):
        packet = IP(dst=self.ip,ttl=20)/ICMP()
        return self.doPingScan(packet)

    def timestamp(self):

        packet = IP(dst=self.ip,ttl=20)/ICMP(type=13)
        return self.doPingScan(packet)
            
    def addrmask(self):
        
        packet = IP(dst=self.ip,ttl=20)/ICMP(type=17)
        return self.doPingScan(packet)

    def syn(self):

        for destPort in synPingPorts:
            srcPort = RandShort()
            packet = IP(dst=self.ip)/TCP(sport=srcPort,dport=destPort,flags="S")
            reply = sr1(packet, timeout=1)
            if (reply is None):
                huhu = 1
            elif reply.haslayer(TCP):
                if(reply.getlayer(TCP).flags == 0x12):
                    self.port_found = destPort
                    return 1
        return 0

    def ack(self):

        for destPort in ackPingPorts:
            srcPort = RandShort()
            packet = IP(dst=self.ip)/TCP(sport=srcPort,dport=destPort,flags="A")
            reply = sr1(packet, timeout=1)
            if (reply is None):
                huhu = 1
            elif reply.haslayer(TCP):
                if(reply.getlayer(TCP).flags == 0x4):
                    self.port_found = destPort
                    return 1
        return 0
        
scan_ips = []
input_ips = str(sys.argv[1])

for ip in ipaddress.IPv4Network(input_ips):
    scan_ip = ScanIP(ip)
    scan_ips.append(scan_ip)

print("Starting host_discovery.py with " + str(len(scan_ips)) + " IPs.\nThis could take a while...\n\n")

for scan_ip in scan_ips:
    scan_ip.scan()
    if scan_ip.state == 1:
        print(scan_ip.found + scan_ip.ip)
